A simple extension to Raphael elements to make them draggable.
Just call some_raphael_object.draggable() and you're done.

If you want a click on one object to start a drag on another target
object, pass the target object to draggable().

draggable() takes a second optional argument to restrict which mouse
button will be used for dragging. Pass false and only the left button
will drag, or true and only the right button will.

Simple example:

      paper = Raphael($("notepad"), 200, 200);
      rect = paper.rect(5, 10, 60, 20, 10).attr({stroke: "#009", "stroke-width": 3});
      rect.draggable();

If the object supports an updateDrag method, that will be called with the
x and y deltas and the booleans ctrl, shift, alt for each mouse move
while dragging. Otherwise the object will be translate()d on each move.

Example (resize the rectangle instead of dragging it):

      rect.updateDrag = function(dx, dy, ctrl, shift, alt) {
        rect.attr({
          width: rect.attrs.width + dx,
          height: rect.attrs.height + dy
        })
      }

If the object supports startDrag and finishDrag methods, those will be
called with the clientX and clientY from the mouse event.

MIT License

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
